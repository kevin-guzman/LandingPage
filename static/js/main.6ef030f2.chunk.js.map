{"version":3,"sources":["logo.svg","util/images/photoProfile.jpg","util/icons/linkedin.svg","util/icons/instagram.svg","util/icons/facebook.svg","util/icons/twitter.svg","util/icons/phone.svg","pages/Loading.js","pages/Home.js","functions/getJSON.js","App.js","serviceWorker.js","index.js"],"names":["Loading","className","skills","name","value","Home","useState","proyectsFilter","setProyectsFilter","proyects","setProyects","isLoading","setIsLoading","currentProyect","setCurrentProyect","useEffect","setInterval","undefined","proyectsFiltred","Proyects","filter","x","tags","includes","obj","fields","undefined_response","lodash","get","getJSON","SkillProgress","color","percent","onClick","ProgressBar","variant","animated","now","ProyectCard","images","description","longDescription","urlVid","index","src","Carousel","map","Item","interval","key","allowFullScreen","width","height","style","marginTop","href","Photo","toString","urlImg","imageFromat","imageFormat","title","App","exact","path","component","Boolean","window","location","hostname","match","container","document","getElementById","elementApp","StrictMode","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6ef030f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export default __webpack_public_path__ + \"static/media/photoProfile.91330c93.jpg\";","export default __webpack_public_path__ + \"static/media/linkedin.744f0de7.svg\";","export default __webpack_public_path__ + \"static/media/instagram.6c22396f.svg\";","export default __webpack_public_path__ + \"static/media/facebook.c37af570.svg\";","export default __webpack_public_path__ + \"static/media/twitter.e954de35.svg\";","export default __webpack_public_path__ + \"static/media/phone.5dc61861.svg\";","import React from 'react'\nimport '../styles/Loading.css'\n\nlet Loading = () =>{\n    return(\n        <div className=\"loader\">Loading...</div>\n    )\n}\n\nexport default Loading ","import React,{useEffect, useState}  from 'react';\nimport '../styles/Container.css'\nimport '../styles/SkillProgress.css'\nimport '../styles/ProyectCard.css'\nimport Photo from '../util/images/photoProfile.jpg'\nimport Linkend from '../util/icons/linkedin.svg'\nimport Instagram from '../util/icons/instagram.svg'\nimport Facebook from '../util/icons/facebook.svg'\nimport Twitter from '../util/icons/twitter.svg'\nimport Phone from '../util/icons/phone.svg'\nimport Proyects from '../data/Proyects.json'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport Loading from './Loading'\nimport {Carousel} from 'react-bootstrap'\nimport {getJSON} from '../functions/getJSON'\n\nconst skills = [\n    {name:'Node JS', value:56},\n    {name:'React JS', value:60},\n    {name:'React Native', value:80},\n    {name:'Python', value:40},\n    {name:'IoT', value:25},\n    {name:'Firebase', value:60},\n    // {name:'', value:0},\n]\n\nconst social_networks = [\n    {icon:Linkend, href:''},\n    {icon:Instagram, href:'https://www.instagram.com/guzman__kevin?r=nametag'},\n    {icon:Facebook, href:'https://www.facebook.com/kevin.guzman.1000'},\n    {icon:Twitter, href:'https://twitter.com/keeee_vin'},\n    {icon:Phone, href:'https://api.whatsapp.com/send?phone=573057206777'},\n\n]\n\nconst Home = () => {\n    const [proyectsFilter, setProyectsFilter] = useState('React Native') //React Native\n    const [proyects, setProyects]=useState([])\n    const [isLoading, setIsLoading]= useState(true)\n    const [currentProyect, setCurrentProyect] = useState('SmartHouse')\n    useEffect(()=>{\n        setIsLoading(true)\n        setInterval(()=>{\n            setIsLoading(false)\n        }, 990)\n        if (proyectsFilter === undefined){\n            // setProyects(Proyects)\n        }else{\n            const proyectsFiltred = Proyects.filter( x => x.tags.includes(proyectsFilter) )\n            setCurrentProyect(getJSON(proyectsFiltred[0], ['title'], ''))\n            setProyects(proyectsFiltred)\n        }\n    },[proyectsFilter])\n    const SkillProgress = ({name='', color='', percent=0}) => {\n        return(\n            <button onClick={()=>setProyectsFilter(name)} className='SkillContainer' >\n                <div className='TextContainer' >\n                    <p className='SkillText' >{name}</p>\n                    <p className='SkillText' >{percent}%</p>\n                </div>\n                <ProgressBar variant='success' className='ProgressBar' animated now={percent} />\n            </button>\n        )\n    }\n    const ProyectCard = ({name='SmartHouse', images=[], description='Description', longDescription='', urlVid, index}) => {\n        return(\n            <>\n            <button onClick={()=>setCurrentProyect(currentProyect === name ? '' : name)} className='CardContainer' >\n                <div className='InfoContainer' >\n                    <p className='CardTittle' >{name}</p> \n                </div>\n                <div className='IconCard' >\n                    <img  className={currentProyect === name ? 'ChevronIconRotated' : 'ChevronIcon'} src='https://image.flaticon.com/icons/png/512/59/59065.png'/* 'https://image.flaticon.com/icons/png/512/25/25629.png' */ />\n                </div>\n            </button>\n            {currentProyect === name && (\n                <>\n                <div className='AditionalInfoContainer' >\n                    <div className='LongDescriptionContainer' >\n                        <p className='LongDescription' >{longDescription}</p>\n                    </div>\n                    <div className='CardImages' >\n                    <Carousel>\n                        {images.map((value, index)=>{\n                            return (\n                                <Carousel.Item interval={1000} >\n                                    <img key={value} className='CardImage' src={ `https://drive.google.com/uc?export=view&id=${value}`} />\n                                </Carousel.Item>\n                            )\n                        })}\n                    </Carousel>\n                    </div>\n                </div>\n                {urlVid && <div className='VideoContainer' >\n                    <iframe className='Video' allowFullScreen={true} width=\"520\" height=\"260\" src={`https://www.youtube.com/embed/${urlVid}`} style={{marginTop: '2%'}} ></iframe>\n                </div>}\n                </>\n                )}\n            </>\n        )\n    }\n    return (\n            <div className=\"Container\"  >\n                <div className=\"Header\">\n                    <div className=\"HeaderLeft\"  >\n                        <h1 className=\"Header-tittle\" >Portafolio de proyectos</h1>\n                        {/* <p className=\"Header-name\">Kevin Guzm√°n</p> */}\n                        <div className='ContactInfo' >\n                            <div>\n                                <p className='PersonalDescription' >\n                                    Mi nombre es Kevin Guzm√°n, soy desarrollador de \n                                    aplicaciones web y m√≥viles y estudiante de tecnolog√≠a \n                                    en electr√≥nica de la Universidad Distrital FJDC cursando el \n                                    noveno semestre.<p></p>\n                                    Mi experiencia con las tecnolg√≠as es de media de 1 a√±o, tengo \n                                    un nivel de ingl√©s de B2 aproximadamente, me considero una persona\n                                    proactiva y que aporta muchas ideas.<p></p>\n                                    Mail: kevinskate.kg@gmail.com<p></p>\n                                </p>\n                                <a className='PersonalDescription' href='https://api.whatsapp.com/send?phone=573057206777'>\n                                    Tel√©fono: +57 3057206777\n                                </a>\n                                <p></p>\n                                <a className='PersonalDescription' href='https://drive.google.com/drive/folders/16DTgBFXzQl6oOfBg2gxUDMyyB-XRj_QH?usp=sharing'>\n                                    Click aqu√≠ para descargar las Aplicaciones.\n                                </a>\n                            </div>\n                            <img className=\"Header_Photo\" src={Photo}  />\n                        </div>\n                    </div>\n                    <div className=\"HeaderRight\" >\n                        <title className='HeaderRightTittle' >Habilidades</title>\n                        {skills.map((value, index)=>(\n                            <SkillProgress name={value.name} percent={value.value} key={index.toString()} />\n                        ))}\n                    </div>\n                </div>\n            \n            <div className=\"Container-Body\">\n                {!isLoading? proyects.map((value, index)=>{\n                    return <ProyectCard\n                            index={index}\n                            key={index.toString()}\n                            images={value.urlImg}\n                            longDescription={value.longDescription}\n                            imageFromat={value.imageFormat}\n                            urlVid={value.urlVid}\n                            description={value.description}\n                            name={value.title} />\n                })\n                :<Loading/>}\n            </div>\n            {/* <div>\n            <p style={{textAlign:'center', fontSize:15,color:'#DCDAEF', marginTop:10}}>kevinskate.kg@gmail.com <br></br> +57 305 720 6777 </p>\n            </div>  */}\n        </div>  \n    )\n}\n\nexport default Home;","import lodash from 'lodash'\n\nexport const getJSON = (obj={}, fields=[], undefined_response='') => {\n    if (typeof(obj) !== 'object' || typeof(fields) !== 'object' ) return undefined_response\n    return lodash.get(obj, fields)?lodash.get(obj, fields):undefined_response\n} ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  BrowserRouter\n} from \"react-router-dom\";\nimport Home from './pages/Home'\nimport NotFound from './pages/NotFound';\n\nlet App = () => {\n  return (\n    <BrowserRouter  >\n      <Switch>\n        <Route exact path=\"/LandingPage\" component={Home}/>\n        <Route path=\"*\" component={Home} />\n        {/* <Route component={NotFound} /> */}\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nconst container = document.getElementById('root')\nconst element = (\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n\nconst elementApp =(\n  <App/>\n)\n\n\nReactDOM.render( elementApp , container);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}